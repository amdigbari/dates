import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.jetbrains.kotlin.jvm' version '1.9.23'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.23'
	id 'org.jetbrains.kotlin.plugin.jpa' version "1.9.23"
}

group = 'mediaManager'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	
	implementation 'org.jetbrains.kotlin:kotlin-reflect'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.mysql:mysql-connector-j'

	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.5'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'

	implementation 'org.springframework.boot:spring-boot-starter-mail'

	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'redis.clients:jedis'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test:6.2.3'

	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

}

kotlin {
	jvmToolchain {
		languageVersion.set(JavaLanguageVersion.of(17))
	}
}
tasks.withType(KotlinCompile).configureEach {
	compilerOptions {
		freeCompilerArgs.add("-opt-in=kotlin.RequiresOptIn")
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
