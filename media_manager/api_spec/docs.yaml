openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/v1/auth/send-otp:
    post:
      tags:
      - authentication-controller
      operationId: sendOtp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendOTPRequestDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpResponseBoolean'
  /api/v1/auth/register:
    post:
      tags:
      - authentication-controller
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequestDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpResponseLoginResponseDto'
  /api/v1/auth/refresh-token:
    post:
      tags:
      - authentication-controller
      operationId: refreshToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequestDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpResponseRefreshTokenResponseDto'
  /api/v1/auth/login:
    post:
      tags:
      - authentication-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpResponseLoginResponseDto'
  /api/v1/users/info:
    get:
      tags:
      - user-controller
      operationId: get
      parameters:
      - name: Authorization
        in: header
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpResponseProfileResponseDto'
  /api/v1/auth/logout:
    delete:
      tags:
      - authentication-controller
      operationId: logout
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpResponseBoolean'
components:
  schemas:
    SendOTPRequestDto:
      required:
      - email
      type: object
      properties:
        email:
          type: string
    HttpResponseBoolean:
      required:
      - data
      - status
      type: object
      properties:
        data:
          type: boolean
        status:
          type: boolean
    RegisterRequestDto:
      required:
      - email
      - fullName
      - otp
      - password
      type: object
      properties:
        email:
          type: string
        otp:
          type: string
        password:
          type: string
        fullName:
          type: string
        nickname:
          type: string
    HttpResponseLoginResponseDto:
      required:
      - data
      - status
      type: object
      properties:
        data:
          $ref: '#/components/schemas/LoginResponseDto'
        status:
          type: boolean
    LoginResponseDto:
      required:
      - accessToken
      - refreshToken
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    RefreshTokenRequestDto:
      required:
      - token
      type: object
      properties:
        token:
          type: string
    HttpResponseRefreshTokenResponseDto:
      required:
      - data
      - status
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RefreshTokenResponseDto'
        status:
          type: boolean
    RefreshTokenResponseDto:
      required:
      - accessToken
      - refreshToken
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    LoginRequestDto:
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    HttpResponseProfileResponseDto:
      required:
      - data
      - status
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProfileResponseDto'
        status:
          type: boolean
    ProfileResponseDto:
      required:
      - email
      - fullName
      - id
      - nickname
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        fullName:
          type: string
        nickname:
          type: string
