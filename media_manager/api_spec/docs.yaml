openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/auth/send-otp:
    post:
      tags:
      - authentication-controller
      operationId: sendOtp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendOTPRequestDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpResponseBoolean'
  /api/auth/register:
    post:
      tags:
      - authentication-controller
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequestDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpResponseUser'
  /api/auth/refresh-token:
    post:
      tags:
      - authentication-controller
      operationId: refreshToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequestDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpResponseRefreshTokenResponseDto'
  /api/auth/login:
    post:
      tags:
      - authentication-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpResponseLoginResponseDto'
  /api/users:
    get:
      tags:
      - user-controller
      operationId: list
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpResponseListUser'
  /api/users/{id}:
    get:
      tags:
      - user-controller
      operationId: get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpResponseUser'
  /api/auth/logout:
    delete:
      tags:
      - authentication-controller
      operationId: logout
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpResponseBoolean'
components:
  schemas:
    SendOTPRequestDto:
      required:
      - email
      type: object
      properties:
        email:
          type: string
    HttpResponseBoolean:
      required:
      - data
      - status
      type: object
      properties:
        data:
          type: boolean
        status:
          type: boolean
    RegisterRequestDto:
      required:
      - email
      - otp
      - password
      type: object
      properties:
        email:
          type: string
        otp:
          type: string
        password:
          type: string
    HttpResponseUser:
      required:
      - data
      - status
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
        status:
          type: boolean
    User:
      required:
      - email
      - id
      - password
      - role
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        password:
          type: string
        role:
          type: string
          enum:
          - USER
          - ADMIN
    RefreshTokenRequestDto:
      required:
      - token
      type: object
      properties:
        token:
          type: string
    HttpResponseRefreshTokenResponseDto:
      required:
      - data
      - status
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RefreshTokenResponseDto'
        status:
          type: boolean
    RefreshTokenResponseDto:
      required:
      - accessToken
      - refreshToken
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    LoginRequestDto:
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    HttpResponseLoginResponseDto:
      required:
      - data
      - status
      type: object
      properties:
        data:
          $ref: '#/components/schemas/LoginResponseDto'
        status:
          type: boolean
    LoginResponseDto:
      required:
      - accessToken
      - refreshToken
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    HttpResponseListUser:
      required:
      - data
      - status
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
        status:
          type: boolean
