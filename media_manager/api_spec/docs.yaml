openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/auth/register:
    post:
      tags:
      - auth-controller
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /api/auth/refresh-token:
    post:
      tags:
      - auth-controller
      operationId: refreshToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequestDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RefreshTokenResponseDto'
  /api/auth/login:
    post:
      tags:
      - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginResponseDto'
  /api/users:
    get:
      tags:
      - user-controller
      operationId: list
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /api/users/{id}:
    get:
      tags:
      - user-controller
      operationId: get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /api/auth/logout:
    delete:
      tags:
      - auth-controller
      operationId: logout
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
components:
  schemas:
    User:
      required:
      - email
      - id
      - password
      - role
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        password:
          type: string
        role:
          type: string
          enum:
          - USER
          - ADMIN
    RefreshTokenRequestDto:
      required:
      - token
      type: object
      properties:
        token:
          type: string
    RefreshTokenResponseDto:
      required:
      - accessToken
      - refreshToken
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    LoginRequestDto:
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    LoginResponseDto:
      required:
      - accessToken
      - refreshToken
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
